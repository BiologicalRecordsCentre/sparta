% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/occDetFunc.r
\name{occDetFunc}
\alias{occDetFunc}
\title{Occupancy detection Function}
\usage{
occDetFunc(
  taxa_name,
  occDetdata,
  spp_vis,
  n_iterations = 5000,
  nyr = 2,
  burnin = 1500,
  thinning = 3,
  n_chains = 3,
  write_results = TRUE,
  output_dir = getwd(),
  modeltype = "sparta",
  max_year = NULL,
  seed = NULL,
  model.function = NULL,
  regional_codes = NULL,
  region_aggs = NULL,
  additional.parameters = NULL,
  additional.BUGS.elements = NULL,
  additional.init.values = NULL,
  return_data = FALSE,
  criterion = 1,
  provenance = NULL,
  saveMatrix = FALSE
)
}
\arguments{
\item{taxa_name}{A character giving the name of the species to be modelled.}

\item{occDetdata}{The 2nd element of the object returned by formatOccData.}

\item{spp_vis}{The 1st element of the object returned by formatOccData.}

\item{n_iterations}{numeric, An MCMC parameter - The number of interations}

\item{nyr}{numeric, the minimum number of periods on which a site must have records for it
to be included in the models. Defaults to 2}

\item{burnin}{numeric, An MCMC parameter - The length of the burn in}

\item{thinning}{numeric, An MCMC parameter - The thinning factor}

\item{n_chains}{numeric, an MCMC parameter - The number of chains to be run}

\item{write_results}{logical, should results be saved to \code{output_dir}. This is
recommended since these models can take a long time to run. If \code{TRUE} (default)
the results from each species will be saved as an .rdata file once the species
has run. This prevents loss of data should anything go wrong.}

\item{output_dir}{character, the output directory were the output for each taxa will be saved
as .rdata files. This will defualt to the working directory}

\item{modeltype}{A character string or vector of strings that specifies the model to use. See details. If
used then model.function is ignored.}

\item{max_year}{numeric, final year to which analysis will be run, this can be set if it is beyond
the limit of the dataset.  Defaults to final year of the dataset.}

\item{seed}{numeric, uses \code{set.seed} to set the randon number seed. Setting
this number ensures repeatabl analyses}

\item{model.function}{optionally a user defined BUGS model coded as a function (see \code{?jags},
including the example there, for how this is done)}

\item{regional_codes}{A data.frame object detailing which site is associated with which region.
each row desginates a site and each column represents a region. The first column represents the 
site name (as in \code{site}). Subsequent columns are named for each regions with 1 representing
the site is in that region and 0 that it is not. NOTE a site should only be in one region}

\item{region_aggs}{A named list giving aggregations of regions that you want trend
estimates for. For example \code{region_aggs = list(GB = c('england', 'scotland', 'wales'))}
will produced a trend for GB (Great Britain) as well as its constituent nations. Note that
'england', scotland' and 'wales' must appear as names of columns in \code{regional_codes}. 
More than one aggregate can be given, eg \code{region_aggs = list(GB = c('england', 'scotland',
 'wales'), UK = c('england', 'scotland', 'wales', 'northern_ireland'))}.}

\item{additional.parameters}{A character vector of additional parameters to monitor}

\item{additional.BUGS.elements}{A named list giving additioanl bugs elements passed 
to \code{R2jags::jags} 'data' argument}

\item{additional.init.values}{A named list giving user specified initial values to 
be added to the defaults.}

\item{return_data}{Logical, if \code{TRUE} (default) the BUGS data object is returned with the data}

\item{criterion}{Determines whether the model should be run. If an integer then this defines the threshold number of records (50 in Outhwaite et al 2019).
Other options are `EqualWt` or `HighSpec`, which define the application of "rules of thumb" defined in Pocock et al 2019. 
Defaults to 1, in which case the model is applied for so long there is a single record of the focal species.}

\item{provenance}{An optional text string allowing the user to identify the dataset.}

\item{saveMatrix}{Logical, if \code{FALSE} (default) the sims.matrix element of the jags object is omitted, in order to reduce the filesize.}
}
\value{
A list including the model, JAGS model output, the path of the model file used and information on the number of iterations, first year, last year, etc.
Key aspects of the model output include:
\itemize{
 \item{\code{"out$model"}}{ - The model used as provided to JAGS. Also contained is a list of fully observed variables. These are those listed in the BUGS data.}
 \item{\code{"out$BUGSoutput$n.chains"}}{ - The number of Markov chains ran in the MCMC simulations.}
 \item{\code{"out$BUGSoutput$n.iter"}}{ - The total number of iterations per chain.}
 \item{\code{"out$BUGSoutput$n.burnin"}}{ - The number of interations discarded from the start as a burn-in period.}
 \item{\code{"out$BUGSoutput$n.thin"}}{ - The thinning rate used. For example a thinning rate of 3 retains only every third iteration. This is used to reduce autocorrelation.}
 \item{\code{"out$BUGSoutput$n.keep"}}{ - The number of iterations kept per chain. This is the total number of iterations minus the burn-in then divided by the thinning rate.}
 \item{\code{"out$BUGSoutput$n.sims"}}{ - The total number of iterations kept.}
 \item{\code{"out$BUGSoutput$summary"}}{ - A summary table of the monitored parameter. The posterior distribution for each parameter is summaried with the mean, standard deviation, various credible intervals, a formal convergence metric (Rhat), and a measure of effective sample size (n.eff).}
 \item{\code{"out$BUGSoutput$mean"}}{ - the mean values for all monitored parameters}
 \item{\code{"out$BUGSoutput$sd"}}{ - the standard deviation values for all monitored parameters}
 \item{\code{"out$BUGSoutput$median"}}{ - the median values for all monitored parameters}
 \item{\code{"out$parameters.to.save"}}{ - The names of all monitored parameters.}
 \item{\code{"out$BUGSoutput$model.file"}}{ - The user provided or temporary generated model file detailing the occupancy model.}
 \item{\code{"out$n.iter"}}{ - The total number of interations per chain.}
 \item{\code{"out$DIC"}}{ - Whether the Deviance Information Criterion (DIC) is calculated.}
 \item{\code{"out$BUGSoutput$sims.list"}}{ - A list of the posterior distribution for each monitored parameter. Use sims.array and sims.matrix if a different format of the posteriors is desired.}
 \item{\code{"out$SPP_NAME"}}{ - The name of the study species.}
 \item{\code{"out$min_year"}}{ - First year of data included in the occupancy model run.}
 \item{\code{"out$max_year"}}{ - Final year of data included in the occupancy model run or final year specified by the user.}
 \item{\code{"out$nsite"}}{ - The number of unique sites included in the occupancy model run.}
 \item{\code{"out$nvisits"}}{ - The number of unique visits included int he occupancy model run.}
 \item{\code{"out$species_sites"}}{ - The number of unique sites the species of interest was recorded in.}
 \item{\code{"out$species_observations"}}{ - The number of unique records for the species of interest.}
 \item{\code{"out$regions"}}{ - The names of the regions included in the model run.}
 \item{\code{"out$region_aggs"}}{ - The names of the region aggregates included in the model run.}
 \item{\code{"out$nsites_region"}}{ - Named vector containing the number of sites in each region included in the occupancy model run.}
}
}
\description{
Run occupancy detection models using the output from \code{formatOccData}
}
\details{
This function requires both the R package R2jags and the program JAGS.
These are not installed by default when sparta is loaded and so should be
installed by the user. More details can be found in teh vignette.

\code{modeltype} is used to choose the model as well as the associated initial values,
and parameters to monitor. Elements to choose from can be separated into the following components:

A. Prior type: this has 3 options, each of which was tested in Outhwaite et al (in review):
  1. sparta - This uses the same model as in Isaac et al (2014).
  2. indran - This is the adaptive stationary model.
  3. ranwalk - This is the random walk model.

B. Hyperprior type: This has 3 options, each of these are discussed in Outhwaite et al (in review):
  1. halfuniform - the original formulation in Isaac et al (2014).
  2. halfcauchy - preferred form, tested in Outhwaite et al (2018).
  3. inversegamma - alternative form presented in the literature.

C. List length specification:  This has 3 options:
  1. catlistlength - list length as a categorical variable.
  2. contlistlength - list length as a continuous variable.
  3. nolistlength - no list length variable.

D. Julian date: this is an additional option for including Julian date within the detection model:
  1. jul_date.

Not all combinations are available in sparta. You will get an error if you try and use
a combination that is not supported. There is usually a good reason why that
combination is not a good idea. Here are the model elements available:

\itemize{
 \item{\code{"sparta"}}{ - This uses the same model as in Isaac et al (2014)}
 \item{\code{"indran"}}{ - Here the prior for the year effect of the state model is modelled as a random effect.  This allows the model to adapt to interannual variability.}
 \item{\code{"ranwalk"}}{ - Here the prior for the year effect of the state model is modelled as a random walk.  Each estimate for the year effect is dependent on that of the previous year.}
 \item{\code{"halfcauchy"}}{ - Includes half-Cauchy hyperpriors for all random effects within the model.  The half-Cauchy is a special case of the Studentâ€™s t distribution with 1 degree of freedom. }
 \item{\code{"inversegamma"}}{ - Includes inverse-gamma hyperpriors for random effects within the model}
 \item{\code{"catlistlength"}}{ - This specifies that list length should be considered as a catagorical variable. There are 3 classes, lists of length 1, 2-3, and 4 and over. If none of the list length options are specifed 'contlistlength' is used}
 \item{\code{"contlistlength"}}{ - This specifies that list length should be considered as a continious variable. If none of the list length options are specifed 'contlistlength' is used}
 \item{\code{"nolistlength"}}{ - This specifies that no list length should be used. If none of the list length options are specifed 'contlistlength' is used}
 \item{\code{"jul_date"}}{ - This adds Julian date to the model as a normal distribution with its mean and standard deviation as monitered parameters.}
 \item{\code{"intercept"}}{ - No longer available. Includes an intercept term in the state and observation model.  By including intercept terms, the occupancy and detection probabilities in each year are centred on an overall mean level.}
 \item{\code{"centering"}}{ - No longer available. Includes hierarchical centering of the model parameters.   Centring does not change the model explicitly but writes it in a way that allows parameter estimates to be updated simultaneously.}
}
These options are provided as a vector of characters, e.g. \code{modeltype = c('indran', 'halfcauchy', 'catlistlength')}
}
\examples{
\dontrun{

set.seed(123)

# Create data
n <- 15000 #size of dataset
nyear <- 20 # number of years in data
nSamples <- 100 # set number of dates
nSites <- 50 # set number of sites

# Create somes dates
first <- as.Date(strptime("2010/01/01", format="\%Y/\%m/\%d")) 
last <- as.Date(strptime(paste(2010+(nyear-1),"/12/31", sep=''), format="\%Y/\%m/\%d")) 
dt <- last-first 
rDates <- first + (runif(nSamples)*dt)

# taxa are set as random letters
taxa <- sample(letters, size = n, TRUE)

# sites are visited randomly
site <- sample(paste('A', 1:nSites, sep=''), size = n, TRUE)

# the date of visit is selected at random from those created earlier
survey <- sample(rDates, size = n, TRUE)

# Format the data
visitData <- formatOccData(taxa = taxa, site = site, survey = survey)

# run the model with these data for one species (very small number of iterations)
results <- occDetFunc(taxa_name = taxa[1],
                      n_iterations = 50,
                      burnin = 15, 
                      occDetdata = visitData$occDetdata,
                      spp_vis = visitData$spp_vis,
                      write_results = FALSE,
                      provenance  = "sparta test dataset")
}
}
\references{
Isaac, N.J.B., van Strien, A.J., August, T.A., de Zeeuw, M.P. and Roy, D.B. (2014).
            Statistics for citizen science: extracting signals of change from noisy ecological data.
            \emph{Methods in Ecology and Evolution}, 5: 1052-1060.

Outhwaite, C.L., Chandler, R.E., Powney, G.D., Collen, B., Gregory, R.D. & Isaac, N.J.B. (2018).
            Prior specification in Bayesian occupancy modelling improves analysis of species occurrence data. 
            \emph{Ecological Indicators}, 93: 333-343.

Pocock, Logie, Isaac, Outhwaite & August. Rapid assessment of the suitability of multi-species citizen science datasets for occupancy trend analysis. \emph{bioRxiv} 813626 (2019) doi:10.1101/813626.
}
\keyword{bayesian,}
\keyword{distribution,}
\keyword{modeling}
\keyword{occupancy,}
\keyword{species,}
\keyword{trends,}
